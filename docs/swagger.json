{
    "swagger": "2.0",
    "info": {
        "description": "Your API Description",
        "title": "Your API Name",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/logs": {
            "get": {
                "description": "Returns a list of all logs from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "Get all logs",
                "responses": {
                    "200": {
                        "description": "List of logs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/backendT_internal_database_repository.Log"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/logs/filtered": {
            "get": {
                "description": "Returns filtered logs based on method, response type and time range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "Get filtered logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "HTTP method to filter by",
                        "name": "method",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Response status code to filter by",
                        "name": "response",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time range (e.g. '-1 hour', '-24 hours', '-7 days')",
                        "name": "timeRange",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/backendT_internal_database_repository.LogsGetBasicViewWithOffsetLimitAdvancedRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/logs/paginated": {
            "get": {
                "description": "Returns a paginated list of logs with basic view",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "Get paginated logs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/backendT_internal_database_repository.LogsGetBasicViewWithOffsetLimitRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "description": "Returns a list of all posts from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get all posts",
                "responses": {
                    "200": {
                        "description": "List of posts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/backendT_internal_database_repository.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/posts/id/{id}": {
            "get": {
                "description": "Fetches a single user by numeric ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found user",
                        "schema": {
                            "$ref": "#/definitions/backendT_internal_database_repository.User"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/posts/username/{username}": {
            "get": {
                "description": "Fetches a single user by their username.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get user by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found user",
                        "schema": {
                            "$ref": "#/definitions/backendT_internal_database_repository.User"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid username",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Returns a list of all users from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/backendT_internal_database_repository.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user in the database. Expects a JSON body with the required fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "New user payload",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backendT_internal_database_repository.UsersCreateParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created user",
                        "schema": {
                            "$ref": "#/definitions/backendT_internal_database_repository.User"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/email/{email}": {
            "get": {
                "description": "Fetches a single user by their email address.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found user",
                        "schema": {
                            "$ref": "#/definitions/backendT_internal_database_repository.User"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid email",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/id/{id}": {
            "get": {
                "description": "Fetches a single user by numeric ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found user",
                        "schema": {
                            "$ref": "#/definitions/backendT_internal_database_repository.User"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/username/{username}": {
            "get": {
                "description": "Fetches a single user by their username.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found user",
                        "schema": {
                            "$ref": "#/definitions/backendT_internal_database_repository.User"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid username",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "backendT_internal_database_repository.Log": {
            "type": "object",
            "properties": {
                "bytes_in": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "bytes_out": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "error": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "host": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "id": {
                    "type": "integer"
                },
                "latency": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "latency_human": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "method": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "remote_ip": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "request_id": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "status": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "timestamp": {
                    "$ref": "#/definitions/sql.NullTime"
                },
                "uri": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "user_agent": {
                    "$ref": "#/definitions/sql.NullString"
                }
            }
        },
        "backendT_internal_database_repository.LogsGetBasicViewWithOffsetLimitAdvancedRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/sql.NullTime"
                },
                "method": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "path": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "response": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "response_time": {
                    "$ref": "#/definitions/sql.NullString"
                }
            }
        },
        "backendT_internal_database_repository.LogsGetBasicViewWithOffsetLimitRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/sql.NullTime"
                },
                "method": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "path": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "response": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "response_time": {
                    "$ref": "#/definitions/sql.NullString"
                }
            }
        },
        "backendT_internal_database_repository.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/sql.NullTime"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "backendT_internal_database_repository.UsersCreateParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "sql.NullInt64": {
            "type": "object",
            "properties": {
                "int64": {
                    "type": "integer",
                    "format": "int64"
                },
                "valid": {
                    "description": "Valid is true if Int64 is not NULL",
                    "type": "boolean"
                }
            }
        },
        "sql.NullString": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if String is not NULL",
                    "type": "boolean"
                }
            }
        },
        "sql.NullTime": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        }
    }
}